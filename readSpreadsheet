function myFunction(id) {
  // Open the spreadsheet by ID
  var spreadsheet = SpreadsheetApp.openByUrl(id);
  if (!spreadsheet) {
    throw new Error("Spreadsheet not found: " + id); // Throw error if not found
  }

  // Get the first sheet in the spreadsheet
  var sheet = spreadsheet.getActiveSheet();
  if (!sheet) {
    throw new Error("No sheets found in spreadsheet: " + id);
  }

  // Fetch data from the sheet
  var data = sheet.getDataRange().getValues();
  if (data.length === 0) {
    throw new Error("No data found in sheet: " + id); // Check if the sheet is empty
  }

  var headers = data[0]; // The first row contains the headers
  var jsonData = [];

  // Map rows to objects using headers
  for (var i = 1; i < data.length; i++) { // Skip header row
    var row = data[i];
    var rowObject = {};

    for (var j = 0; j < headers.length; j++) {
      rowObject[headers[j]] = row[j]; // Map each column header to its value in the row
    }

    jsonData.push(rowObject);
  }

  Logger.log(jsonData); // Log for debugging
  return jsonData; // Return the JSON data as a response
}

function doPost(e) {
  try {
    // Check if the POST request contains valid data
    if (!e.postData.contents) {
      return ContentService.createTextOutput(JSON.stringify({ error: "Invalid request: No data provided." }))
          .setMimeType(ContentService.MimeType.JSON);
    }

    // Parse the incoming request data
    var params = JSON.parse(e.postData.contents);

    // Extract the sheetId from the POST data
    var sheetId = String(params.id);
    if (!sheetId) {
      return ContentService.createTextOutput(JSON.stringify({ error: "Parameter 'id' is required." }))
          .setMimeType(ContentService.MimeType.JSON);
    }

    // Call myFunction to fetch data from the sheet
    var jsonData = myFunction(sheetId);

    // Return the JSON response
    return ContentService.createTextOutput(JSON.stringify(jsonData))
                          .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    Logger.log("Error occurred: " + error); // Log the error for debugging
    return ContentService.createTextOutput(JSON.stringify({ error: error.toString() }))
                          .setMimeType(ContentService.MimeType.JSON);
  }
}

function test(){
  console.log(myFunction("1R69HuhxADbqHHA05eh5SjUGJPiT67wrO7_-Byya4O-I"));
}
